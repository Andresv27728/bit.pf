const calcCommand = {
  name: "calc",
  category: "utilidades",
  description: "Calcula una expresi칩n matem치tica.",

  async execute({ sock, msg, args }) {
    const expression = args.join(' ');
    if (!expression) {
      return sock.sendMessage(msg.key.remoteJid, { text: "Por favor, proporciona una expresi칩n matem치tica. Ejemplo: `calc 2 * (3 + 5)`" }, { quoted: msg });
    }

    try {
      // Usamos el constructor de Function para una evaluaci칩n m치s segura que eval()
      // Se limita a operaciones matem치ticas b치sicas.
      const sanitizedExpression = expression.replace(/[^-()\d/*+.]/g, '');
      const result = new Function(`return ${sanitizedExpression}`)();

      if (isNaN(result) || !isFinite(result)) {
        throw new Error("Expresi칩n inv치lida");
      }

      await sock.sendMessage(msg.key.remoteJid, { text: `游빑 *Resultado:*\n${expression} = ${result}` }, { quoted: msg });

    } catch (e) {
      console.error("Error en el comando calc:", e);
      await sock.sendMessage(msg.key.remoteJid, { text: "No se pudo calcular la expresi칩n. Aseg칰rate de que sea matem치ticamente correcta." }, { quoted: msg });
    }
  }
};

export default calcCommand;
